# default node variables
PORT=8000
HTTPS=0  # enable https (set to 0 if you don't want https)
# the private key and certificate (replace enters with \n)
HTTPS_KEY=/app/persistent/key.pem
HTTPS_CERT=/app/persistent/cert.pem

# path of the forms.json file, best is to put this on a persistent volume
# so it can be externalized in case this app is containerized
FORMS_PATH=/app/persistent/forms.json

# logging setting
# options are error,warn,info,http,verbose,debug,silly
LOG_LEVEL=silly
LOG_ERRORPATH=/app/persistent/error.log
LOG_PATH=/app/persistent/all.log
LOG_CONSOLE_LEVEL=silly

# secure api with Json Web Tokens using token secret
ACCESS_TOKEN_SECRET=myownaccesstokensecret
ACCESS_TOKEN_EXPIRATION=5m
ACCESS_TOKEN_REFRESH_EXPIRATION=72h

# ldap
LDAP_SERVER=ldaps://myserver.fqdn.local:636
LDAP_IGNORE_CERTIFICATE_ERRORS=0
LDAP_TLS=1
LDAP_CERT='-----BEGIN CERTIFICATE-----\n..... BASE64 ... USE \n AS NEWLINE \n-----END CERTIFICATE-----\n'
LDAP_CA='-----BEGIN CERTIFICATE-----\n..... BASE64 ... USE \n AS NEWLINE \n-----END CERTIFICATE-----\n'
LDAP_BIND_USER_DN=cn=administrator,cn=Users,dc=domain,dc=local
LDAP_BIND_USER_PASSWORD=MyLdapPassword
LDAP_SEARCH_BASE=ou=Home,dc=domain,dc=local
LDAP_USERNAME_ATTRIBUTE=sAMAccountName

# connect to AWX
AWX_HOST=http://172.16.50.1
AWX_TOKEN=MyAwxAccessToken

# connect to local ansible
# for docker this only works if you embed ansible into the dockerimage
ANSIBLE_PATH=/bin/ansible

# database connection for local user management
DB_AUTH_NAME=Mysql server authentication
DB_AUTH_HOST=172.16.50.1
DB_AUTH_USER=root
DB_AUTH_PASSWORD=MySqlPassword

# custom database connection for queries ; sample 1
DB_CONN1_NAME=Mysql server 1
DB_CONN1_TYPE=MySql
DB_CONN1_HOST=172.16.50.1
DB_CONN1_USER=root
DB_CONN1_PASSWORD=MySqlPassword

# custom database connection for queries ; sample 2
DB_CONN2_NAME=Mysql server 2
DB_CONN2_TYPE=MySql
DB_CONN2_HOST=172.16.50.1
DB_CONN2_USER=root
DB_CONN2_PASSWORD=MySqlPassword

# custom connection for rest ; sample1
CUSTOM_REST1_USER=admin
CUSTOM_REST1_PASSWORD=RestPassword

# custom connection for rest ; sample2
CUSTOM_REST1_USER=admin
CUSTOM_REST1_PASSWORD=RestPassword
