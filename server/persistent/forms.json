{
  "categories":[
    {
      "name":"Default",
      "icon":"bars"
    },
    {
      "name":"Provisioning",
      "icon":"pencil-alt"
    },
    {
      "name":"Decommissioning",
      "icon":"trash-alt"
    },
    {
      "name":"Ansible",
      "icon":"atom"
    },
    {
      "name":"AWX",
      "icon":"magic"
    },
    {
      "name":"Demo",
      "icon":"heart"
    }
  ],
  "roles":[
    {
      "name":"admin",
      "groups":["local/admins","ldap/Domain Admins"]
    },
    {
      "name":"operator",
      "groups":["local/operator"]
    },
    {
      "name":"demo",
      "groups":["local/demo"]
    },
    {
      "name":"public",
      "groups":[]
    }
  ],
  "forms":[
    {
      "name":"Create storage with ansible",
      "roles":["public"],
      "description":"Create storage using vanilla ansible and hardcode dropdowns",
      "tileClass":"has-background-success-light",
      "icon":"plus",
      "categories":["Provisioning","Ansible"],
      "type":"ansible",
      "playbook":"pilot_play_basic_create.yml",
      "inventory":"storage_inventory.yml",
      "tags":"source_inventory,create_all",
      "fields":[
        {
          "type":"text",
          "name":"cluster_name",
          "label":"Cluster",
          "placeholder":"Cluster name",
          "default":"cluster1",
          "required":true,
          "icon":"building"
        },
        {
          "type":"text",
          "name":"svm_name",
          "label":"Svm",
          "placeholder":"Svm name",
          "default":"pri_svm_01",
          "required":true,
          "icon":"house"
        },
        {
          "type":"enum",
          "name":"volume_name",
          "label":"Volume",
          "placeholder":"Volume name",
          "default":"",
          "values":["pri_svm_01_cifs_001","pri_svm_01_cifs_002","pri_svm_01_cifs_003"],
          "required":true,
          "icon":"database"
        },
        {
          "type":"text",
          "name":"ip_interface_name",
          "label":"Interface",
          "placeholder":"Interface name",
          "default":"pri_svm_01_mgmt01",
          "required":true,
          "icon":"network-wired"
        }
      ]
    },
    {
      "name":"Delete storage with ansible",
      "roles":["operator"],
      "description":"Delete a storage using vanilla ansible",
      "categories":["Decommissioning","Ansible"],
      "tileClass":"has-background-danger-light",
      "icon":"trash",
      "type":"ansible",
      "playbook":"pilot_play_basic_delete.yml",
      "inventory":"inventory.yml",
      "tags":"delete_all",
      "fields":[
        {
          "type":"text",
          "name":"cluster_name",
          "label":"Cluster",
          "placeholder":"Cluster name",
          "default":"cluster1",
          "required":true,
          "icon":"building"
        },
        {
          "type":"text",
          "name":"svm_name",
          "label":"Svm",
          "placeholder":"Svm name",
          "default":"pri_svm_01",
          "required":true,
          "icon":"house"
        },
        {
          "type":"enum",
          "name":"volume_name",
          "label":"Volume",
          "placeholder":"Volume name",
          "default":"",
          "values":["pri_svm_01_cifs_001","pri_svm_01_cifs_002","pri_svm_01_cifs_003"],
          "required":true,
          "icon":"database"
        }
      ]
    },
    {
      "name":"Create storage with awx",
      "roles":["public"],
      "description":"Creates a storage with AWX",
      "categories":["AWX","Provisioning"],
      "template":"create_storage",
      "tileClass":"has-background-success-light",
      "icon":"plus",
      "inventory":"",
      "type":"awx",
      "tags":"",
      "fields":[
        {
          "type":"text",
          "name":"cluster_name",
          "label":"Cluster",
          "placeholder":"Cluster name",
          "default":"cluster1",
          "required":true,
          "icon":"building"
        },
        {
          "type":"text",
          "name":"svm_name",
          "label":"Svm",
          "placeholder":"Svm name",
          "default":"pri_svm_01",
          "required":true,
          "icon":"house"
        },
        {
          "type":"enum",
          "name":"volume_name",
          "label":"Volume",
          "placeholder":"Volume name",
          "default":"",
          "values":["pri_svm_01_cifs_001","pri_svm_01_cifs_002","pri_svm_01_cifs_003"],
          "required":true,
          "icon":"database"
        },
        {
          "type":"text",
          "name":"ip_interface_name",
          "label":"Interface",
          "placeholder":"Interface name",
          "default":"pri_svm_01_mgmt01",
          "required":true,
          "icon":"network-wired"
        }
      ]
    },
    {
      "name":"Delete storage with awx",
      "roles":["public"],
      "template":"Demo delete storage",
      "categories":["Decommissioning","AWX"],
      "tileClass":"has-background-danger-light",
      "icon":"trash",
      "inventory":"",
      "type":"awx",
      "tags":"",
      "fields":[
        {
          "type":"text",
          "name":"cluster_name",
          "label":"Cluster",
          "placeholder":"Cluster name",
          "default":"cluster1",
          "required":true,
          "icon":"building"
        },
        {
          "type":"text",
          "name":"svm_name",
          "label":"Svm",
          "placeholder":"Svm name",
          "default":"pri_svm_01",
          "required":true,
          "icon":"house"
        },
        {
          "type":"enum",
          "name":"volume_name",
          "label":"Volume",
          "placeholder":"Volume name",
          "default":"",
          "values":["pri_svm_01_cifs_001","pri_svm_01_cifs_002","pri_svm_01_cifs_003"],
          "required":true,
          "icon":"database"
        }
      ]
    },
    {
      "name":"Demo Form Ansible No input",
      "image":"https://picsum.photos/64",
      "roles":["public"],
      "description":"This workflow will kickoff the vanilla ansible dummy playbook.",
      "categories":["Demo","Ansible"],
      "tileClass":"has-background-warning",
      "playbook":"dummy.yaml",
      "inventory":"",
      "type":"ansible",
      "fields":[]
    },
    {
      "name":"Demo Form Functionality Expressions",
      "roles":["public"],
      "description":"This workflow will show expressions",
      "categories":["Demo"],
      "tileClass":"has-background-warning",
      "icon":"scroll",
      "playbook":"dummy.yaml",
      "inventory":"",
      "type":"ansible",
      "fields":[
          {
            "type":"text",
            "name":"textfield1",
            "label":"Field 1",
            "default":"",
            "required":true,
            "minLength":4,
            "maxLength":10
          },
          {
            "type":"text",
            "name":"textfield2",
            "label":"Field 2",
            "default":"",
            "required":true,
            "minLength":4,
            "maxLength":10
          },
          {
            "type":"expression",
            "hide":false,
            "name":"concatination",
            "default":"",
            "label":"Concatination Example",
            "expression":"'$(textfield1)' + ' ' + '$(textfield2)' + $(multiply)"
          },
          {
            "type":"number",
            "name":"numberfield",
            "label":"Number",
            "default":"1",
            "required":true,
            "minValue":0,
            "maxValue":10
          },
          {
            "type":"expression",
            "hide":false,
            "name":"multiply",
            "default":"",
            "label":"Multiply Example",
            "expression":"$(numberfield)*100"
          },
          {
            "type":"expression",
            "hide":false,
            "name":"pi",
            "default":"",
            "label":"The number PI",
            "expression":"Math.PI"
          }
      ]
    },
    {
      "name":"Database query",
      "roles":["public"],
      "description":"This workflow will show queries",
      "categories":["Demo"],
      "icon":"database",
      "tileClass":"has-background-warning",
      "playbook":"dummy.yaml",
      "inventory":"",
      "type":"ansible",
      "fields":[
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name from storage.cluster",
            "name":"cluster_name",
            "label":"Select a cluster",
            "default":"__auto__",
            "required":true
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select svm.name from storage.svm,storage.cluster where svm.cluster_id=cluster.id and cluster.name='$(cluster_name)'",
            "name":"svm_name",
            "label":"Select a svm",
            "default":"__auto__",
            "required":false
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select volume.name,svm.name 'svm' from storage.volume,storage.svm where volume.svm_id=svm.id and svm.name='$(svm_name)'",
            "name":"vol_name",
            "label":"Select a volume",
            "default":"__none__",
            "required":true
          }
        ]
    },
    {
      "name":"Database query and dependencies",
      "roles":["public"],
      "description":"This workflow will show queries and dependencies",
      "categories":["Demo"],
      "tileClass":"has-background-warning",
      "icon":"link",
      "playbook":"dummy.yaml",
      "inventory":"",
      "type":"ansible",
      "fields":[
          {
            "type":"checkbox",
            "name":"createstorage",
            "label":"Storage",
            "default":true,
            "placeholder":"Create Storage ?"
          },
          {
            "type":"checkbox",
            "name":"showcmdb",
            "label":"Cmdb",
            "default":false,
            "placeholder":"Show CMDB information ?"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name from storage.cluster",
            "name":"cluster_name",
            "label":"Select a cluster",
            "default":"__auto__",
            "required":true,
            "model":"storage.cluster.name",
            "group":"Storage",
            "dependencies":[
              {
                "name":"createstorage",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select svm.name from storage.svm,storage.cluster where svm.cluster_id=cluster.id and cluster.name='$(cluster_name)'",
            "name":"svm_name",
            "label":"Select a svm",
            "default":"__auto__",
            "required":true,
            "model":"storage.cluster.svm.name",
            "group":"Storage",
            "dependencies":[
              {
                "name":"createstorage",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select volume.name,svm.name 'svm' from storage.volume,storage.svm where volume.svm_id=svm.id and svm.name='$(svm_name)'",
            "name":"vol_name",
            "label":"Select a volume",
            "default":"__auto__",
            "required":true,
            "model":"storage.cluster.volume.name",
            "group":"Storage",
            "dependencies":[
              {
                "name":"createstorage",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select n*50 as name from storage.generator_16 where n>0 and n<10",
            "name":"size_mb",
            "label":"Select a size in MB",
            "default":"50",
            "required":true,
            "model":"storage.cluster.volume.sizemb",
            "group":"Storage",
            "dependencies":[
              {
                "name":"createstorage",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name from cmdb.city",
            "name":"city_name",
            "label":"Select a city",
            "default":"__auto__",
            "required":true,
            "model":"cmdb.city",
            "group":"CMDB",
            "dependencies":[
              {
                "name":"showcmdb",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select datacenter.name from cmdb.datacenter,cmdb.city where datacenter.city_id=city.id and city.name='$(city_name)'",
            "name":"datacenter_name",
            "label":"Select a datacenter",
            "default":"__auto__",
            "required":true,
            "model":"cmdb.datacenter",
            "group":"CMDB",
            "dependencies":[
              {
                "name":"showcmdb",
                "values":[true]
              }
            ]
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select resource.name 'resource',datacenter.name 'datacenter' from cmdb.resource,cmdb.datacenter where resource.datacenter_id=datacenter.id and datacenter.name='$(datacenter_name)'",
            "name":"resource_name",
            "label":"Select a resource",
            "default":"__auto__",
            "required":true,
            "model":"cmdb.resource",
            "group":"CMDB",
            "dependencies":[
              {
                "name":"showcmdb",
                "values":[true]
              }
            ]
          },
          {
            "type":"expression",
            "name":"final_resource",
            "hide":false,
            "expression":"'$(vol_name) $(resource_name)'",
            "label":"Final resource",
            "default":"",
            "required":false,
            "model":"final.resource"
          }
      ]
    },
    {
      "name":"Demo Form Functionality Simple Fields",
      "roles":["public"],
      "description":"This workflow will show form field examples",
      "categories":["Demo"],
      "tileClass":"has-background-warning",
      "icon":"text",
      "playbook":"dummy.yaml",
      "inventory":"",
      "type":"ansible",
      "fields":[
          {
            "type":"text",
            "name":"username",
            "label":"Username",
            "default":"ansibleguy",
            "placeholder":"type a username",
            "required":true,
            "minLength":4,
            "maxLength":10,
            "regex":"^[a-zA-Z]*$",
            "regexDescription":"Must be alpha numeric",
            "icon":"user"
          },
          {
            "type":"password",
            "name":"password",
            "label":"Password",
            "default":"",
            "required":true,
            "minLength":8,
            "maxLength":20,
            "regex":"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])",
            "regexDescription":"Must contain at least 1 numeric, 1 special, 1 upper and 1 lower character",
            "icon":"lock"
          },
          {
            "type":"password",
            "name":"password_verify",
            "label":"Verify Password",
            "default":"",
            "sameAs":"password",
            "icon":"lock"
          },
          {
            "type":"number",
            "name":"numberfield",
            "label":"Number",
            "default":"1",
            "required":true,
            "minValue":0,
            "maxValue":10
          },
          {
            "type":"enum",
            "name":"country",
            "label":"Country",
            "default":"belgium",
            "values":["belgium","netherlands"],
            "required":true
          },
          {
            "type":"enum",
            "name":"languages",
            "label":"Languages",
            "default":[],
            "values":["english","dutch","french","spanish","german","swedish","chinese"],
            "multiple":true,
            "size":4,
            "required":true,
            "icon":"flag",
            "help":"You can select multiple languages if you want !"
          },
          {
            "type":"radio",
            "name":"linuxfavourite",
            "label":"Choose your favorite linux flavour",
            "values":["CentOS","Ubuntu","Red Hat","Debian"],
            "default":"CentOS",
            "required":true
          },
          {
            "type":"checkbox",
            "name":"areyousure",
            "label":"Confirmation",
            "default":false,
            "placeholder":"are you sure?"
          }
      ]
    },
    {
      "name":"Query options",
      "roles":["demo"],
      "description":"This shows all the query options and combinations.",
      "categories":["Demo"],
      "tileClass":"has-background-warning",
      "template":"HelloWorld",
      "inventory":"",
      "type":"awx",
      "fields":[
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name from cmdb.city",
            "name":"city_name0",
            "multiple":false,

            "default":"__none__",
            "label":"Simple one column select",
            "icon":"building",
            "placeholder":"Select a city"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name1",
            "multiple":false,

            "default":"__none__",
            "label":"Multiple columns",
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name2",
            "multiple":false,

            "label":"Autoselect first item",
            "default":"__auto__",
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name3",
            "multiple":false,

            "label":"Required field",
            "default":"__none__",
            "required":true,
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name4",
            "multiple":false,
            "outputObject":true,
            "label":"Object output",
            "default":"__none__",
            "required":false,
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name5",
            "multiple":true,

            "label":"Select multiple, flattened output",
            "default":"__none__",
            "required":false,
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name6",
            "multiple":true,
            "outputObject":true,
            "label":"Select multiple, object output",
            "default":"__none__",
            "required":false,
            "icon":"building"
          },
          {
            "type":"query",
            "dbConfig":"CONN1",
            "query":"select name,CONCAT('I love ',name) love from cmdb.city",
            "name":"city_name7",
            "multiple":true,
            "outputObject":true,
            "label":"Specific default",
            "default":"Brussels",
            "required":false,
            "icon":"building"
          }
      ]
    },
    {
      "name":"Expression Queries",
      "roles":["demo"],
      "description":"A few samples of the power of expression based queries",
      "categories":["Demo"],
      "tileClass":"has-background-warning",
      "template":"HelloWorld",
      "inventory":"",
      "type":"awx",
      "fields":[
          {
            "type":"query",
            "name":"user",
            "label":"Users - from rest (properties used : expression,columns,valueColumn,default=__auto__)",
            "default":"__none__",
            "required":true,
            "outputObject":true,
            "multiple":false,
            "expression":"fn.fnRestBasic('get','https://gorest.co.in/public/v1/users','','','[.data[]]')",
            "columns":["name","email"],
            "valueColumn":"id",
            "previewColumn":"name",
            "help":"Data comes from https://gorest.co.in/public/v1/users"
          },
          {
            "type":"query",
            "name":"post",
            "label":"Posts - from rest (properties used : expression,columns,valueColumn,default=__auto__)",
            "default":"__none__",
            "required":true,
            "outputObject":true,
            "multiple":false,
            "expression":"fn.fnRestBasic('get','https://gorest.co.in/public/v1/posts?user_id=$(user.id)','','','[.data[]]')",
            "columns":["id","title"],
            "valueColumn":"id",
            "previewColumn":"title",
            "help":"Data comes from https://gorest.co.in/public/v1/posts"
          },
          {
            "type":"query",
            "name":"file",
            "label":"Read data from json file (properties used : expression,multiple,column,default=__auto__)",
            "required":true,
            "multiple":false,
            "default":"__auto__",
            "expression":"fn.fnReadJsonFile('./../server/persistent/forms.json','[.forms[]]')",
            "columns":["name","type"]
          }
      ]
    },
    {
      "name":"HelloWorld",
      "roles":["demo"],
      "description":"This will kick off the HelloWorld template.  It does not expect any variables, so that's cool because it should always run :)",
      "categories":["Demo"],
      "tileClass":"has-background-success",
      "template":"HelloWorld",
      "inventory":"",
      "type":"awx",
      "fields":[
          {
            "model":"hello.world",
            "type":"text",
            "name":"Testfield",
            "label":"Testfield",
            "default":"",
            "required":true
          }
      ]
    }
  ]
}
